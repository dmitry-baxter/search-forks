{"version":3,"sources":["api.js","actions.js","components/search.js","components/forksTable.js","pages/Home.js","components/favoritesTable.js","pages/Favorites.js","App.js","reducer.js","index.js"],"names":["fetchForks","query","Promise","resolve","fetch","method","headers","then","res","json","setSearch","value","dispatch","type","payload","unfavoriteFork","userId","id","getState","getFirebase","set","Search","favorites","history","useHistory","location","useLocation","parsedQuery","queryString","parse","search","sort","useSelector","state","app","useState","setQuery","searchInvalid","setSearchInvalid","searchPosition","setSearchPosition","page","undefined","prevPage","setPrevPage","useDispatch","useEffect","owner","repository","queryObject","data","split","string","stringify","replace","throttledQuery","useRef","throttle","q","a","forks","status","message","searchForks","leading","trailing","current","divStyle","display","flexDirection","alignItems","justifyContent","height","transition","style","Container","textAlign","position","visibility","color","Input","error","icon","size","iconPosition","placeholder","width","marginBottom","boxShadow","onChange","target","length","right","top","transform","cursor","isEmpty","Icon","name","to","ForksTable","loading","parseInt","list","isNaN","pages","setPage","number","marginTop","Loader","active","inline","Table","celled","selectable","margin","Header","Row","HeaderCell","Body","map","item","key","Cell","repositoryName","stars","href","link","onClick","fork","favoriteFork","Footer","colSpan","Pagination","totalPages","pointing","secondary","firstItem","lastItem","activePage","onPageChange","e","Home","props","FavoriteTable","showModal","setShowModal","forkToUnfavorite","setForkToUnfavorite","toggleModal","values","el","el2","Modal","basic","open","content","Content","Actions","Button","inverted","Favorites","as","goBack","fontSize","lineHeight","App","localStorage","getItem","useFirebaseConnect","fbData","firebase","users","uuidv4","setItem","path","from","initialState","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","combineReducers","action","firebaseReducer","applyMiddleware","thunk","withExtraArgument","ReactDOM","render","config","document","getElementById"],"mappings":"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","file":"static/js/main.70b3d0ef.chunk.js","sourcesContent":["export const fetchForks = query => {\r\n  return new Promise((resolve) => {\r\n    fetch(`/api/get-forks?${ query }`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }).then(res => res.json()).then(res => {\r\n      resolve(res)\r\n    })\r\n  })\r\n}\r\n","import { fetchForks } from './api'\r\n\r\n\r\nexport const setUserId = value => dispatch => {\r\n  dispatch({ type: 'SET_USER_ID', payload: value })\r\n}\r\n\r\nexport const setSearch = value => dispatch => {\r\n  dispatch({ type: 'SET_SEARCH', payload: value })\r\n}\r\n\r\nexport const searchForks = query => async dispatch => {\r\n  if (query) {\r\n    dispatch({ type: 'SET_LOADING' })\r\n    const forks = await fetchForks(query)\r\n    if (forks.status === 'success') {\r\n      dispatch({\r\n        type: 'SET_FORKS',\r\n        payload: forks\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: 'SET_ERROR',\r\n        payload: forks.message\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const favoriteFork = (userId, fork) => (dispatch, getState, getFirebase) => {\r\n  if (userId && fork) {\r\n    const firebase = getFirebase()\r\n    firebase.set(`/users/${ userId }/favorites/${ fork.id }`, fork)\r\n  }\r\n}\r\n\r\nexport const unfavoriteFork = (userId, id) => (dispatch, getState, getFirebase) => {\r\n  if (userId && id) {\r\n    const firebase = getFirebase()\r\n    firebase.set(`/users/${ userId }/favorites/${ id }`, null)\r\n  }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Icon, Input } from 'semantic-ui-react'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { setSearch, searchForks } from '../actions'\r\nimport queryString from 'query-string'\r\nimport { throttle, isEmpty } from 'lodash'\r\n\r\nexport default function Search({ favorites }) {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const parsedQuery = queryString.parse(location.search, { sort: false })\r\n  const search = useSelector(state => state.app.search)\r\n  const [query, setQuery] = useState(null)\r\n  const [searchInvalid, setSearchInvalid] = useState(null)\r\n  const [searchPosition, setSearchPosition] = useState('center')\r\n  const { page } = parsedQuery\r\n  const [prevPage, setPrevPage] = useState(undefined)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const { owner, repository } = parsedQuery\r\n    if (owner && repository) {\r\n      dispatch(setSearch(owner + '/' + repository))\r\n    } else if (owner) {\r\n      dispatch(setSearch(owner))\r\n    } else { dispatch(setSearch('')) }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (search !== null) {\r\n      if (search === '') {\r\n        setSearchPosition('center')\r\n      } else { setSearchPosition('top') }\r\n      setPrevPage(page)\r\n      const queryObject = {\r\n        owner: '',\r\n        repository: '',\r\n        page: prevPage !== page ? page : undefined\r\n      }\r\n      const data = search.split('/', 2)\r\n      queryObject.owner = data[0] || undefined\r\n      queryObject.repository = data[0] ? data[1] || undefined : undefined\r\n      setQuery(queryObject)\r\n    }\r\n  }, [search, parsedQuery.page])\r\n\r\n  useEffect(() => {\r\n    if (query !== null) {\r\n      const string = queryString.stringify(query, { sort: false })\r\n      history.replace('/search?' + string)\r\n      if (!searchInvalid) throttledQuery(string)\r\n    }\r\n  }, [query])\r\n\r\n  const throttledQuery = useRef(throttle((q) =>\r\n    dispatch(searchForks(q))\r\n  ,1300, { leading: false, trailing: true })).current\r\n\r\n\r\n  const changeInput = ({ target: { value }}) => {\r\n    dispatch(setSearch(value.replace(/\\s/g,'')))\r\n    const data = value.split('/', 3)\r\n    if ((data[0].length === 0 && data.length === 2) || data.length === 3) {\r\n      setSearchInvalid(true)\r\n    } else { setSearchInvalid(false)}\r\n  }\r\n\r\n  const divStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: searchPosition === 'center' ? '100vh' : '160px',\r\n    transition: '0.5s'\r\n  }\r\n\r\n  return (\r\n    <div style={divStyle}>\r\n      <Container textAlign='center' style={{ position: 'relative' }}>\r\n        <p style={{visibility: searchInvalid ? 'visible': 'hidden', color: '#DA7477'}}>Invalid format</p>\r\n        <Input\r\n          error={ searchInvalid }\r\n          icon='github'\r\n          size='big'\r\n          iconPosition='left'\r\n          placeholder='Search forks'\r\n          style={{ width: '30%', marginBottom: '.3rem', boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 9px 0px' }}\r\n          value={ search || '' }\r\n          onChange={ changeInput }\r\n        />\r\n        <p>Please use format: <strong>owner/repositoryName</strong></p>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            right: '13%',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            cursor: !isEmpty(favorites) ? 'pointer' : 'auto'\r\n          }}\r\n        >\r\n          { !isEmpty(favorites) ?\r\n              <Link to='/favorites'>\r\n                <Icon size='big' name='star' color='yellow'/>\r\n              </Link>\r\n            : <Icon size='big' name='star outline' color='yellow'/>\r\n          }\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { Container, Table, Loader, Pagination, Icon } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { favoriteFork, unfavoriteFork } from '../actions'\r\n\r\nexport default function ForksTable({ search, loading, forks, error, favorites }) {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const parsedQuery = queryString.parse(location.search, { sort: false })\r\n  const page = parsedQuery.page ? parseInt(parsedQuery.page) : null\r\n  const { userId } = useSelector(state => state.app)\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (!forks.list.length) {\r\n        setPage(undefined)\r\n      } else if (isNaN(page) || (page && (page > forks.pages || page < 1))) {\r\n        setPage(1)\r\n      }\r\n    }\r\n  }, [page, forks])\r\n\r\n  const setPage = number => {\r\n    history.replace('/search?' + queryString.stringify({ ...parsedQuery, page: number }, { sort: false }))\r\n  }\r\n\r\n  const pageChange = (e, data) => {\r\n    setPage(data.activePage)\r\n  }\r\n\r\n  const favorite = fork => dispatch(favoriteFork(userId, fork))\r\n\r\n  const unfavorite = id => dispatch(unfavoriteFork(userId, id))\r\n\r\n\r\n  return (\r\n    <Container textAlign='center' style={{ marginTop: '3rem', width: '80%' }}>\r\n      {\r\n        !loading ?\r\n          forks.list.length ?\r\n            <Table celled selectable textAlign='center' style={{ margin: '0 auto 6rem', boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 18px 0px' }}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Repository Name</Table.HeaderCell>\r\n                  <Table.HeaderCell>Owner</Table.HeaderCell>\r\n                  <Table.HeaderCell>Stars</Table.HeaderCell>\r\n                  <Table.HeaderCell>Link</Table.HeaderCell>\r\n                  <Table.HeaderCell>Favorite</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                { forks.list.map(item => {\r\n                  return (\r\n                    <Table.Row key={ item.id }>\r\n                      <Table.Cell>{ item.repositoryName }</Table.Cell>\r\n                      <Table.Cell>{ item.owner }</Table.Cell>\r\n                      <Table.Cell>\r\n                        <Icon name='star' color='yellow'/>\r\n                        { item.stars }\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <a href={ item.link } target='_blank'>{ item.link }</a>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <Icon\r\n                          name={ favorites[item.id] ? 'star' : 'star outline' }\r\n                          size='large'\r\n                          color='yellow'\r\n                          style={{ cursor: 'pointer' }}\r\n                          onClick={ () => favorites[item.id] ?\r\n                            unfavorite(item.id) :\r\n                            favorite(item) }\r\n                        />\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  )\r\n                })\r\n                }\r\n              </Table.Body>\r\n              { forks.pages > 1 &&\r\n                <Table.Footer>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell colSpan='5'>\r\n                      <Pagination\r\n                        totalPages={ forks.pages }\r\n                        pointing\r\n                        secondary\r\n                        firstItem={ null }\r\n                        lastItem={ null }\r\n                        activePage={ page || 1 }\r\n                        onPageChange={ pageChange }\r\n                      />\r\n                    </Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Footer>\r\n              }\r\n            </Table>\r\n            : search && <h2 style={ { marginTop: '10rem' } }>{ error || 'Nothing found' }</h2>\r\n          : search && <Loader active inline='centered' size='large' style={ { marginTop: '10rem' } }/>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Search from \"../components/search\"\r\nimport { Container } from \"semantic-ui-react\"\r\nimport ForksTable from '../components/forksTable'\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <Container style={{height: '100%'}}>\r\n      <Search favorites={ props.favorites }/>\r\n      <ForksTable { ...props }/>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Container, Table, Loader, Icon, Modal, Header, Button } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { favoriteFork, unfavoriteFork } from '../actions'\r\nimport { values } from 'lodash'\r\n\r\nexport default function FavoriteTable({ favorites }) {\r\n  const dispatch = useDispatch()\r\n  const { userId } = useSelector(state => state.app)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [forkToUnfavorite, setForkToUnfavorite] = useState('')\r\n\r\n  const unfavorite = id => {\r\n    toggleModal(false)\r\n    dispatch(unfavoriteFork(userId, id))\r\n  }\r\n\r\n  const toggleModal = value => {\r\n    setShowModal(value)\r\n  }\r\n\r\n  return (\r\n    <Container textAlign='center' style={{ marginTop: '3rem', width: '80%' }}>\r\n      {\r\n        values(favorites).length ?\r\n          <Table celled selectable textAlign='center' style={{ margin: '0 auto 6rem', boxShadow: 'rgba(0, 0, 0, 0.1) 0px 0px 18px 0px' }}>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>Repository Name</Table.HeaderCell>\r\n                <Table.HeaderCell>Owner</Table.HeaderCell>\r\n                <Table.HeaderCell>Stars</Table.HeaderCell>\r\n                <Table.HeaderCell>Link</Table.HeaderCell>\r\n                <Table.HeaderCell>Unfavorite</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              { values(favorites).sort((el, el2) => el2.stars - el.stars).map(item => {\r\n                return (\r\n                  <Table.Row key={ item.id }>\r\n                    <Table.Cell>{ item.repositoryName }</Table.Cell>\r\n                    <Table.Cell>{ item.owner }</Table.Cell>\r\n                    <Table.Cell>\r\n                      <Icon name='star' color='yellow'/>\r\n                      { item.stars }\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <a href={ item.link } target='_blank'>{ item.link }</a>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Icon\r\n                        name={ favorites[item.id] ? 'star' : 'star outline' }\r\n                        size='large'\r\n                        color='yellow'\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={ () => {\r\n                          setForkToUnfavorite(item.id)\r\n                          toggleModal(true)\r\n                        }}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                )\r\n              })\r\n              }\r\n            </Table.Body>\r\n          </Table>\r\n          : <h2 style={{ marginTop: '10rem' }}>No favorites</h2>\r\n      }\r\n      <Modal basic size='small' open={showModal}>\r\n        <Header icon='star outline' content='Unfavorite'/>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to remove this fork from your favorites list?<br/>\r\n            The author of this fork will be very sad :(\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button basic color='red' inverted onClick={ () => toggleModal(false) }>\r\n            <Icon name='remove'/> No\r\n          </Button>\r\n          <Button color='green' inverted onClick={ () => unfavorite(forkToUnfavorite) }>\r\n            <Icon name='checkmark'/> Yes\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Container, Header, Icon } from \"semantic-ui-react\"\r\nimport ForksTable from '../components/forksTable'\r\nimport { useHistory } from 'react-router-dom'\r\nimport FavoriteTable from '../components/favoritesTable'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function Favorites(props) {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: 'SET_FORKS',\r\n  //     payload: { data: [], pages: 0 }\r\n  //   })\r\n  // }, [])\r\n\r\n  const divStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '160px'\r\n  }\r\n\r\n  return (\r\n    <Container style={{height: '100%'}}>\r\n      <div style={divStyle}>\r\n        <Container textAlign='center'>\r\n          <Header as='h3' onClick={ () => history.goBack() } style={{ cursor: 'pointer' }}>\r\n            <Icon name='arrow left' style={{ fontSize: '1em', lineHeight: '0.7em' }}/>\r\n            Search\r\n          </Header>\r\n        </Container>\r\n      </div>\r\n      <FavoriteTable { ...props }/>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport Home from \"./pages/Home\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUserId } from './actions'\nimport { useFirebaseConnect } from 'react-redux-firebase'\nimport Favorites from './pages/Favorites'\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const userId = localStorage.getItem('userId')\n\n  useFirebaseConnect(`users/${ userId }/favorites`)\n\n  const { data: fbData } = useSelector(state => state.firebase)\n  const { search, loading, forks, error } = useSelector(state => state.app)\n  const favorites = (fbData.users && fbData.users[userId].favorites) || {}\n\n  useEffect(() => {\n    const id = uuidv4()\n    if (!userId) localStorage.setItem('userId', id)\n    dispatch(setUserId(userId || id))\n  }, [])\n\n  return (\n    <div>\n      <Container>\n        <Switch>\n          <Route path='/search'>\n            <Home search={ search } loading={ loading } forks={ forks } error={ error } favorites={ favorites }/>\n          </Route>\n          <Route path='/favorites'>\n            <Favorites favorites={ favorites }/>\n          </Route>\n          <Redirect from='*' to='/search'/>\n        </Switch>\n      </Container>\n    </div>\n  )\n}\n\n","const initialState = {\r\n  userId: null,\r\n  search: null,\r\n  loading: true,\r\n  forks: {\r\n    list: [],\r\n    pages: 0\r\n  },\r\n  error: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_USER_ID':\r\n      return {\r\n        ...state,\r\n        userId: action.payload\r\n      }\r\n    case 'SET_SEARCH':\r\n      return {\r\n        ...state,\r\n        search: action.payload\r\n      }\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: ''\r\n      }\r\n    case 'SET_FORKS':\r\n      return {\r\n        ...state,\r\n        forks: {\r\n          list: action.payload.data,\r\n          pages: action.payload.pages\r\n        },\r\n        loading: false\r\n      }\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        forks: initialState.forks,\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport firebase from 'firebase/app'\nimport 'firebase/database'\nimport { ReactReduxFirebaseProvider, getFirebase, firebaseReducer } from 'react-redux-firebase'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport Reducer from './reducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst fbConfig = {\n  apiKey: \"AIzaSyBIol2omNU3GQQxOxGFO1FTpF-uiuEbnNY\",\n  authDomain: \"search-forks.firebaseapp.com\",\n  databaseURL: \"https://search-forks.firebaseio.com\",\n  projectId: \"search-forks\",\n  storageBucket: \"search-forks.appspot.com\",\n  messagingSenderId: \"868379333449\",\n  appId: \"1:868379333449:web:907733210322b051610098\"\n}\nconst rfConfig = {}\n\nfirebase.initializeApp(fbConfig)\n\nconst store = createStore(combineReducers({\n  app: Reducer,\n  firebase: firebaseReducer\n}), process.env.NODE_ENV === 'development' ?\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(getFirebase)))\n  : applyMiddleware(thunk.withExtraArgument(getFirebase))\n)\n\nReactDOM.render(\n  <Provider store={ store }>\n    <ReactReduxFirebaseProvider\n      firebase={ firebase }\n      config={ rfConfig }\n      dispatch={ store.dispatch }\n    >\n      <Router>\n        <App />\n      </Router>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n, document.getElementById('root'))\n"],"sourceRoot":""}